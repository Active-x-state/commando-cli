#!/bin/bash
# @description The Commando.io command line interface.
#
# Commando.io
# Copyright 2015 NodeSocket, LLC.
# All rights reserved.

set -e

VERSION="0.2"

COMMAND=$1
NETRC=~/.netrc

CURL_COMMAND="curl --netrc --user-agent Commando-Cli/$VERSION"
BASE_URL="https://api.commando.io/v1"

function check_auth {
    if ! grep -Fxq "machine api.commando.io" $NETRC; then
        printf "You are not authenticated. To authenticate, run:\n\n\tcommando auth"
        exit 1
    fi
}

case "$COMMAND" in
    "auth")

        if grep -Fxq "machine api.commando.io" $NETRC; then
            printf "You are already authenticated. To unauthenticate, run:\n\n\tcommando unauth"
            exit 1
        fi

        read -p "Enter your account alias: " ACCOUNT_ALIAS
        read -s -p "Provide a valid API token secret key for $ACCOUNT_ALIAS.commando.io: " SECRET_KEY

        cat <<EOF >> $NETRC
machine api.commando.io
  login $ACCOUNT_ALIAS
  password $SECRET_KEY
EOF
        ;;

    "unauth")

        check_auth

        sed -i '' '/^machine api.commando.io$/{N;N;d;}' $NETRC

        ;;

    "servers")

        check_auth

        SERVER_ID=$2

        if [ "$SERVER_ID" == "" ]; then
            $CURL_COMMAND $BASE_URL/servers
        else
            $CURL_COMMAND $BASE_URL/servers/"$SERVER_ID"
        fi

        ;;

    "groups")

        check_auth

        GROUP_ID=$2

        if [ "$GROUP_ID" == "" ]; then
            $CURL_COMMAND $BASE_URL/groups
        else
            $CURL_COMMAND $BASE_URL/groups/"$GROUP_ID"
        fi

        ;;

    "recipes")

        check_auth

        RECIPE_ID=$2

        if [ "$RECIPE_ID" == "" ]; then
            $CURL_COMMAND $BASE_URL/recipes
        else
            $CURL_COMMAND $BASE_URL/recipes/"$RECIPE_ID"
        fi

        ;;

    "execute")

        RECIPE_ID=$2

        if [ "$RECIPE_ID" == "" ]; then
            printf "Missing required argument recipe id.\n\nUsage:\n\tcommando execute <recipe-id>"
            exit 1
        fi

        check_auth

        $CURL_COMMAND $BASE_URL/recipes/"$RECIPE_ID"/execute

        ;;

    "execution-queue")

        EXECUTION_QUEUE_ID=$2

        if [ "$EXECUTION_QUEUE_ID" == "" ]; then
            printf "Missing required argument execution queue id.\n\nUsage:\n\tcommando execution-queue <execution-queue-id>"
            exit 1
        fi

        check_auth

        $CURL_COMMAND $BASE_URL/execution-queue/"$EXECUTION_QUEUE_ID"

        ;;

    "executions")

        EXECUTION_ID=$2

        if [ "$EXECUTION_ID" == "" ]; then
            printf "Missing required argument execution id.\n\nUsage:\n\tcommando executions <execution-id>"
            exit 1
        fi

        check_auth

        $CURL_COMMAND $BASE_URL/executions/"$EXECUTION_ID"

        ;;

    "version" | "-v" | "--version")

        echo $VERSION

        ;;

    *)

        printf "Usage:\n\tcommando auth\n\tcommando unauth\n\tcommando servers [<server-id>]\n\tcommando groups [<group-id>]\n\tcommando recipes [<recipe-id>]\n\tcommando execute <recipe-id>\n\tcommando execution-queue <execution-queue-id>\n\tcommando executions <execution-id>\n\tcommando version"
        exit 1
        ;;

esac
